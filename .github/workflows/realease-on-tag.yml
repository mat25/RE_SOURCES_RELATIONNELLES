name: release-on-tag

on:
  push:
    tags:
      - 'v*'   # déclenche uniquement sur les tags qui commencent par "v" (ex: v1.0.0)

jobs:
  build-release:
    name: Build & Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # --- Backend ---
      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: m2-${{ runner.os }}-${{ hashFiles('backend/pom.xml') }}
          restore-keys: |
            m2-${{ runner.os }}-

      - name: Maven package (backend)
        run: mvn -B -DskipTests -f backend/pom.xml package

      - name: Collect backend JAR
        run: |
          mkdir -p out
          cp $(ls -t backend/target/*.jar | head -n1) out/app-backend.jar

      # --- Frontend ---
      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps & build frontend
        working-directory: frontend
        run: |
          if [ -f package.json ]; then
            npm ci
            npm run build
          fi

      - name: Collect frontend dist
        run: |
          if [ -d frontend/dist ]; then
            tar -czf out/frontend-dist.tar.gz -C frontend dist
          fi

      # --- Mobile ---
      - name: Setup Flutter 3.35.3
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.3'
          channel: 'stable'
          cache: true

      - name: Flutter pub get
        working-directory: mobile
        run: flutter pub get

      - name: Build APK (release)
        working-directory: mobile
        run: flutter build apk --release

      - name: Collect mobile APK
        run: |
          mkdir -p out
          cp mobile/build/app/outputs/flutter-apk/app-release.apk out/mobile-app-release.apk || echo "Pas d'APK généré"

      # --- Create GitHub Release ---
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: out/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
